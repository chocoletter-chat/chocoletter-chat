name: DEV CD

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker build Í∞ÄÎä•ÌïòÎèÑÎ°ù ÌôòÍ≤Ω ÏÑ§Ï†ï
        uses: docker/setup-buildx-action@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Debug Secrets (Masked)
        run: |
          echo "üîç Debugging Secrets (Masked)"
          echo "SPRING_DATA_MONGODB_URI=***"
          echo "SPRING_KAFKA_BOOTSTRAP_SERVERS=***"
          echo "TOPIC_NAME=***"
          echo "CONSUMER_GROUP_ID=***"
          echo "KAFKA_BROKER_ID=***"
          echo "KAFKA_LISTENERS=***"
          echo "KAFKA_ADVERTISED_LISTENERS=***"
          echo "KAFKA_ZOOKEEPER_CONNECT=***"

      - name: Create .env file on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e  # Ïò§Î•ò Î∞úÏÉù Ïãú Ïä§ÌÅ¨Î¶ΩÌä∏ Ï§ëÎã®
          
            cd /home/ubuntu/chocoletter-chat/chat
            
            # Í∏∞Ï°¥ ÌååÏùºÏù¥ ÏûàÏúºÎ©¥ ÏÇ≠Ï†ú
            rm -f ./.env

            echo "üöÄ .env ÌååÏùº ÏÉùÏÑ± Ï§ë..."
            touch ./.env

            echo "KAFKA_BROKER_ID=${{ secrets.KAFKA_BROKER_ID }}" >> ./.env
            echo "KAFKA_LISTENERS=${{ secrets.KAFKA_LISTENERS }}" >> ./.env
            echo "KAFKA_ADVERTISED_LISTENERS=${{ secrets.KAFKA_ADVERTISED_LISTENERS }}" >> ./.env
            echo "KAFKA_ZOOKEEPER_CONNECT=${{ secrets.KAFKA_ZOOKEEPER_CONNECT }}" >> ./.env

            chmod 600 ./.env
          
            # resources ÏïàÏóêÎèÑ ÏÑ∏ÌåÖ
            cd /home/ubuntu/chocoletter-chat/chat/src/main/resources
            
            # Í∏∞Ï°¥ ÌååÏùºÏù¥ ÏûàÏúºÎ©¥ ÏÇ≠Ï†ú
            rm -f ./.env

            echo "üöÄ .env ÌååÏùº ÏÉùÏÑ± Ï§ë..."
            touch ./.env

            echo "SPRING_DATA_MONGODB_URI=${{ secrets.SPRING_DATA_MONGODB_URI }}" >> ./.env
            echo "SPRING_KAFKA_BOOTSTRAP_SERVERS=${{ secrets.SPRING_KAFKA_BOOTSTRAP_SERVERS }}" >> ./.env
            echo "TOPIC_NAME=${{ secrets.SPRING_KAFKA_TOPIC_NAME }}" >> ./.env
            echo "CONSUMER_GROUP_ID=${{ secrets.SPRING_KAFKA_CONSUMER_GROUP_ID }}" >> ./.env

            echo "‚úÖ .env ÌååÏùº ÏÉùÏÑ± ÏôÑÎ£å!"
      
          EOF

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e  # Ïò§Î•ò Î∞úÏÉù Ïãú Ïä§ÌÅ¨Î¶ΩÌä∏ Ï§ëÎã®
          
            echo "üöÄ Î∞∞Ìè¨ ÏãúÏûë"
          
            # ÌîÑÎ°úÏ†ùÌä∏ ÎîîÎ†âÌÜ†Î¶¨ Ïù¥Îèô ÎòêÎäî ÌÅ¥Î°†
            cd /home/ubuntu || exit 1
          
            if [ -d "/home/ubuntu/chocoletter-chat" ]; then
              echo "üì¶ Í∏∞Ï°¥ ÌîÑÎ°úÏ†ùÌä∏ Î∞úÍ≤¨ - ÏµúÏã† ÏΩîÎìú Í∞ÄÏ†∏Ïò§Í∏∞"
              cd /home/ubuntu/chocoletter-chat
              git reset --hard origin/main  # Î≥ÄÍ≤ΩÎêú ÌååÏùº Ï¥àÍ∏∞Ìôî
              git pull origin main
            else
              echo "üì¶ ÌîÑÎ°úÏ†ùÌä∏Í∞Ä ÏóÜÏñ¥ÏÑú ÏÉàÎ°ú ÌÅ¥Î°†"
              git clone https://github.com/chocoletter-chat/chocoletter-chat.git
              cd chocoletter-chat
            fi
          
            # Docker Compose Ïã§Ìñâ
            cd ./chat
          
            echo "üõë Í∏∞Ï°¥ Ïä§ÌîÑÎßÅ Ïª®ÌÖåÏù¥ÎÑà Ï§ëÏßÄ Î∞è ÏÇ≠Ï†ú"
            sudo docker-compose stop spring-boot-app
          
            echo "üîÑ ÏµúÏã† Ïä§ÌîÑÎßÅ Ïª®ÌÖåÏù¥ÎÑà ÎπåÎìú Î∞è Ïã§Ìñâ"
            sudo docker-compose up -d spring-boot-app
          
            echo "‚úÖ Î∞∞Ìè¨ ÏôÑÎ£å!"
          EOF
