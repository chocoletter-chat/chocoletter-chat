name: Deploy to EC2

on:
  push:
    branches:
      - main # main 브랜치로 푸시할 때 실행

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'bash -s' << 'EOF'
          set -e  # 오류 발생 시 스크립트 중단

          echo "🚀 배포 시작"

          # 프로젝트 디렉토리로 이동 또는 클론
          cd /home/ubuntu || exit 1

          if [ -d "/home/ubuntu/chocoletter-chat" ]; then
            echo "📦 기존 프로젝트 발견 - 최신 코드 가져오기"
            cd /home/ubuntu/chocoletter-chat
            git reset --hard origin/main  # 변경된 파일 초기화
            git pull origin main
          else
            echo "📦 프로젝트가 없어서 새로 클론"
            git clone https://github.com/chocoletter-chat/chocoletter-chat.git
            cd chocoletter-chat
          fi

          # Docker Compose 실행
          cd ./chat

          echo "🔄 스프링 컨테이너 업데이트 및 재시작"
          sudo docker-compose up -d spring-boot-app

          echo "✅ 배포 완료!"
        EOF
