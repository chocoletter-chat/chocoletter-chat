services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network

  spring-boot-app:
    build:
      context: .
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: ${SPRING_DATA_MONGODB_URI}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      SPRING_PROFILES_ACTIVE: dev
      SPRING_KAFKA_TOPIC_CHATTING: ${TOPIC_NAME}
      SPRING_KAFKA_CONSUMER_GROUP_ID:  ${CONSUMER_GROUP_ID}
    depends_on:
      - mongodb
      - kafka
    networks:
      - app-network

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
      ZOO_4LW_COMMANDS_WHITELIST: ruok,stat,conf,isro
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
    depends_on:
      - zookeeper
    networks:
      - app-network

volumes:
  mongodb-data:

networks:
  app-network:
    driver: bridge